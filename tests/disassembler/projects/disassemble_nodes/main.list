# file opened: main.asm
  1   0000              ; Note: For bank border tests the sjasmplus generated binary is
  2   0000              ; assembled in a special memory mode.
  3   0000              ; Instead the slots are generated by the tests:
  4   0000              ; 0x0000-0x3FFF:	single banked (true)
  5   0000              ; 0x4000-0x7FFF:	single banked (true)
  6   0000              ; 0x8000-0x7FFF:	multi banked/not used (false)
  7   0000
  8   0000
  9   0000              	DEFS 0x0000
 10   0000              SUB_0000:
 11   0000 00           	NOP
 12   0001 C9           	RET
 13   0002
 14   0002
 15   0002 00 00 00...  	DEFS 0x0100-$
 16   0100              	; Simple calls to other banks
 17   0100 3E 05        	LD A,5
 18   0102 11 00 00     	LD DE,$0000
 19   0105 2A 00 00     	LD HL,(SUB_0000)	; Found
 20   0108 CD 00 00     	CALL SUB_0000		; Found
 21   010B
 22   010B 41           	LD B,C
 23   010C 11 00 40     	LD DE,$4000
 24   010F 2A 00 40     	LD HL,(SUB_4000)	; Found
 25   0112 CD 00 40     	CALL SUB_4000		; Found
 26   0115
 27   0115 11 10 80     	LD DE,$8010
 28   0118 2A 10 80     	LD HL,($8010)	; bank border
 29   011B CD 00 80     	CALL $8000		; bank border
 30   011E
 31   011E 00           	NOP
 32   011F C9           	RET
 33   0120
 34   0120
 35   0120 00 00 00...  	DEFS 0x4000-$
 36   4000              SUB_4000:
 37   4000 00           	NOP
 38   4001 C9           	RET
 39   4002
 40   4002
 41   4002 00 00 00...  	DEFS 0x6000-$
 42   6000              	; Self modifying code through bank border.
 43   6000              	; See also test at 0xE000.
 44   6000 3E 01        	LD A,$1
 45   6002 32 0C E0     	LD ($E00C),A
 46   6005 CD 09 E0     	CALL $E009
 47   6008 C9           	RET
 48   6009
 49   6009
 50   6009 00 00 00...  	DEFS 0x8000-$
 51   8000              SUB_8000:
 52   8000 00           	NOP
 53   8001 C9           	RET
 54   8002 00 00 00...  	DEFS 0x8010-$
 55   8010              LBL_8010:
 56   8010 00 00        	DEFW 0
 57   8012
 58   8012
 59   8012 00 00 00...  	DEFS 0x8100-$
 60   8100              	; Simple calls to other banks
 61   8100 CD 00 00     	CALL SUB_0000		; Found
 62   8103
 63   8103 CD 00 40     	CALL SUB_4000		; Found
 64   8106
 65   8106 CD 00 80     	CALL SUB_8000		; Found
 66   8109
 67   8109 C9           	RET
 68   810A
 69   810A
 70   810A 00 00 00...  	DEFS 0xD000-$
 71   D000              	; Loop: Label prior to subroutine, misc references
 72   D000 CD 07 D0     	CALL SUB_D007
 73   D003 C9           	RET
 74   D004
 75   D004              LBL_D004:
 76   D004 3E 08        	LD A,$08
 77   D006
 78   D006              .LOOP:
 79   D006 00           	NOP
 80   D007
 81   D007              SUB_D007:
 82   D007 DD 77 05     	LD (IX+5),A
 83   D00A
 84   D00A              .LOOP:
 85   D00A FD 7E F9     	LD A,(IY-7)
 86   D00D 28 FB        	JR Z,.LOOP
 87   D00F
 88   D00F DD CB 00 7E  	BIT 7,(IX)
 89   D013 20 04        	JR NZ,.L1
 90   D015
 91   D015 ED 4B 00 D1  	LD BC,(DATA_D100)
 92   D019
 93   D019              .L1:
 94   D019 ED 53 02 D1  	LD (DATA_D102),DE
 95   D01D FD 2A 04 D1  	LD IY,(DATA_D104)
 96   D021 F2 25 D0     	JP P,.L2
 97   D024
 98   D024 C9           	RET
 99   D025
100   D025              .L2:
101   D025 ED 44        	NEG
102   D027 28 DB        	JR Z,LBL_D004
103   D029
104   D029 D2 06 D0     	JP NC,LBL_D004.LOOP
105   D02C
106   D02C C9           	RET
107   D02D
108   D02D 00 00 00...  	DEFS 0xD100 -$
109   D100
110   D100              DATA_D100:
111   D100 BC BC        	DEFW 0xBCBC
112   D102
113   D102              DATA_D102:
114   D102 DE DE        	DEFW 0xDEDE
115   D104
116   D104              DATA_D104:
117   D104 11 11        	DEFW 0x1111
118   D106
119   D106
120   D106 00 00 00...  	DEFS 0xD200-$
121   D200              	; 2 subroutines merged
122   D200 CD 07 D2     	CALL SUB_D207
123   D203 CD 09 D2     	CALL SUB_D209
124   D206 C9           	RET
125   D207
126   D207              SUB_D207:
127   D207 3E 01        	LD A,$01
128   D209              SUB_D209:
129   D209 3E 02        	LD A,$02
130   D20B C9           	RET
131   D20C
132   D20C
133   D20C 00 00 00...  	DEFS 0xD300-$
134   D300              	; 2 subroutines,sharing tail
135   D300 CD 07 D3     	CALL SUB_D307
136   D303 CD 0B D3     	CALL SUB_D30B
137   D306 C9           	RET
138   D307
139   D307              SUB_D307:
140   D307 3E 01        	LD A,$01
141   D309 18 02        	JR SUB_D30B.L1
142   D30B              SUB_D30B:
143   D30B 3E 02        	LD A,$02
144   D30D              .L1:
145   D30D C9           	RET
146   D30E
147   D30E
148   D30E 00 00 00...  	DEFS 0xD400-$
149   D400              	; subroutine with jumps < subroutine address
150   D400 CD 08 D4     	CALL SUB_D408
151   D403 C9           	RET
152   D404
153   D404              LBL_D404:
154   D404 3E 01        	LD A,$01
155   D406
156   D406              .L1:
157   D406 3E 02        	LD A,$02
158   D408
159   D408              SUB_D408:
160   D408 3E 03        	LD A,$03
161   D40A
162   D40A              .LOOP:
163   D40A 3E 04        	LD A,$04
164   D40C 28 FC        	JR Z,.LOOP
165   D40E
166   D40E 3E 05        	LD A,$05
167   D410 20 02        	JR NZ,.L1
168   D412
169   D412 3E 06        	LD A,$06
170   D414
171   D414              .L1:
172   D414 F2 18 D4     	JP P,.L2
173   D417
174   D417 C9           	RET
175   D418
176   D418              .L2:
177   D418 ED 44        	NEG
178   D41A 28 E8        	JR Z,LBL_D404
179   D41C
180   D41C D2 06 D4     	JP NC,LBL_D404.L1
181   D41F
182   D41F C9           	RET
183   D420
184   D420
185   D420 00 00 00...  	DEFS 0xD500-$
186   D500              	; subroutine with jumps < subroutine address, with additional JP
187   D500 CD 09 D5     	CALL SUB_D509
188   D503 C9           	RET
189   D504
190   D504              LBL_D504:
191   D504 3E 01        	LD A,$01
192   D506 C3 09 D5     	JP SUB_D509
193   D509
194   D509              SUB_D509:
195   D509 3E 02        	LD A,$02
196   D50B D2 04 D5     	JP NC,LBL_D504
197   D50E
198   D50E C9           	RET
199   D50F
200   D50F
201   D50F 00 00 00...  	DEFS 0xD600-$
202   D600              	; subroutine with jumps < subroutine address, with additional JP with hole
203   D600 CD 0A D6     	CALL SUB_D60A
204   D603 C9           	RET
205   D604
206   D604              LBL_D604:
207   D604 3E 01        	LD A,$01
208   D606 C3 0A D6     	JP SUB_D60A
209   D609
210   D609 00           	NOP	; "Hole"
211   D60A
212   D60A              SUB_D60A:
213   D60A 3E 02        	LD A,$02
214   D60C D2 04 D6     	JP NC,LBL_D604
215   D60F
216   D60F C9           	RET
217   D610
218   D610
219   D610 00 00 00...  	DEFS 0xE000-$
220   E000              	; Self modifying code
221   E000 3E 01        	LD A,$1
222   E002 32 0C E0     	LD (SUB_E009.L1+1),A
223   E005 CD 09 E0     	CALL SUB_E009
224   E008 C9           	RET
225   E009
226   E009              SUB_E009:
227   E009 3E 02        	LD A,$02
228   E00B              .L1:	; This does not split the nodes but is a referenced / otherLabels)
229   E00B 06 00        	LD B,$00	; Modified
230   E00D C9           	RET
231   E00E
232   E00E
233   E00E 00 00 00...  	DEFS 0xE100-$
234   E100 3A 07 E1     	LD A,(DATA_E107)
235   E103 21 07 E1     	LD HL,DATA_E107
236   E106 C9           	RET
237   E107
238   E107 00           DATA_E107:	DEFB 0
239   E108
# file closed: main.asm
